    -- Procedure which does group by information
    CREATE OR REPLACE PROCEDURE group_by_infromation
    is
    begin
        for book in (Select genre, AVG(price) as avg_price,count(*) as num_books from books
            group by genre) loop
            dbms_output.put_line('Genre: ' || book.genre || '- Average Price: ' || book.avg_price || '- Number of books: ' || book.num_books);
        end loop;
    end;
    --Function which counts the number of records 
    CREATE OR REPLACE function numOfrec(table_name in varchar)
    return integer is num integer;
    begin
        execute immediate 'SELECT count(*) from ' || table_name into num;
        return num;
    end;
    --Procedure which uses SQL%ROWCOUNT to determine the number of rows affected
    CREATE OR REPLACE PROCEDURE update_proccess is
    BEGIN
        update payment
        set status='ready for confirmation'
        where order_id in
            (SELECT order_id from orders
            where sysdate-dateoforder>3);
        update payment
        set status='rejected'
        where order_id in
            (select order_id from orders
            where sysdate-dateoforder>7);
        
        dbms_output.put_line(sql%rowcount);
    end;
    --Add user-defined exception which disallows to enter title of item (e.g. book) to be less than 5 characters
    	
    --Create a trigger before insert on any entity which will show the current number of rows in the table
    create trigger trigger_review
    before insert on reviews
    referencing old as o new as n
    for each row
    declare
        numOfrows integer;
    begin
        UPDATE Books
        SET rating = (SELECT avg(rating) FROM Reviews
                        WHERE book_id =: n.book_id)
        WHERE book_id =: n.book_id;
        select count(*) into numOfrows from Reviews;
        dbms_output.put_line(numOfrows);
    end;
